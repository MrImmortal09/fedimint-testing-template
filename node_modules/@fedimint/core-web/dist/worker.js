globalThis.__vitest_browser_runner__={wrapDynamicImport:e=>e()};let e=null;console.log("Worker - init"),self.onmessage=async r=>{if("init"===r.data.type)try{const{RpcHandler:r}=await import("@fedimint/fedimint-client-wasm-bundler");e=new r,self.postMessage({type:"init_success"})}catch(e){console.error("Worker init failed:",e),self.postMessage({type:"init_error",error:e.toString()})}else{if(!e)return console.error("Worker: rpcHandler not initialized"),void self.postMessage({type:"error",error:"Worker not initialized. Call init first."});try{e.rpc(JSON.stringify(r.data),(e=>self.postMessage(JSON.parse(e))))}catch(e){console.error("Worker RPC error:",e),self.postMessage({type:"error",error:e.toString()})}}};
//# sourceMappingURL=worker.js.map
